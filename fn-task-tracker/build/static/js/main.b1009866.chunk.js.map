{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","name","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTaks","setTasks","Math","floor","random","newTask","length","taskId","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1009866.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => {\r\n    const { color, text, onClick } = props;\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className=\"btn\"\r\n            style={{ backgroundColor: color }}\r\n        >\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.defaultProps = {\r\n    color: \"steelblue\",\r\n};\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button.js\";\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const onClick = () => {\r\n        console.log(\"Click\");\r\n    };\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button\r\n                onClick={onAdd}\r\n                color={showAdd ? \"red\" : \"green\"}\r\n                text={showAdd ? \"Close\" : \"Add\"}\r\n            />\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    title: \"Header Title\",\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","// npm i react-icons\r\n\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = (props) => {\r\n    const { task, onDelete, onToggle } = props;\r\n\r\n    return (\r\n        <div\r\n            className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n            onDoubleClick={() => onToggle(task.id)}\r\n        >\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes\r\n                    className=\"deleteTaskBtn\"\r\n                    title=\"Delete\"\r\n                    onClick={() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task\r\n                    key={task.id}\r\n                    task={task}\r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState(\"\");\r\n    const [day, setDay] = useState(\"\");\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!text) {\r\n            alert(\"Please add a task.\");\r\n            return;\r\n        }\r\n\r\n        onAdd({ text, day, reminder });\r\n\r\n        setText(\"\");\r\n        setDay(\"\");\r\n        setReminder(false);\r\n    };\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"task\">Task</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"task\"\r\n                    id=\"task\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"day\">Day & Time</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"day\"\r\n                    id=\"day\"\r\n                    value={day}\r\n                    onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-control form-control-check\">\r\n                <label htmlFor=\"reminder\">Set Reminder</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"reminder\"\r\n                    id=\"reminder\"\r\n                    value={reminder}\r\n                    checked={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\" />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTask;\r\n","// rafce: Shortcut to create a component\n// impt: Shortcut to import PropTypes\n// yarn build or npm run build: when ready to deploy\n\n// npm i -g serve\n// serve -s build -p 8000\n\nimport { useState } from \"react\";\nimport Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport AddTask from \"./components/AddTask.js\";\n\nconst App = () => {\n    const [showAddTask, setShowAddTaks] = useState(false);\n\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            text: \"Doctors Appointment\",\n            day: \"Feb 5th at 2:30pm\",\n            reminder: true,\n        },\n\n        {\n            id: 2,\n            text: \"Meeting at School\",\n            day: \"Feb 6th at 1:30pm\",\n            reminder: true,\n        },\n    ]);\n\n    // Add Task\n    const addTask = (task) => {\n        const id = Math.floor(Math.random() * 10000) + 1;\n\n        const newTask = { id, ...task };\n        setTasks([...tasks, newTask]);\n    };\n\n    // Delete Task\n    const deleteTask = (taskId) => {\n        setTasks(tasks.filter((task) => task.id !== taskId));\n    };\n\n    // Toggle Reminder\n    const toggleReminder = (taskId) => {\n        setTasks(\n            tasks.map((task) =>\n                task.id === taskId\n                    ? { ...task, reminder: !task.reminder }\n                    : task\n            )\n        );\n    };\n\n    return (\n        <div className=\"container\">\n            <Header\n                title=\"Task Tracker\"\n                onAdd={() => setShowAddTaks(!showAddTask)}\n                showAdd={showAddTask}\n            />\n            {showAddTask && <AddTask onAdd={addTask} />}\n\n            {tasks.length > 0 ? (\n                <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder}\n                />\n            ) : (\n                \"No Tasks to Show\"\n            )}\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}